"use strict";(self.webpackChunkdesign_system_engineer_challenge=self.webpackChunkdesign_system_engineer_challenge||[]).push([[203],{"./src/components/Title/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return components_Title}});var _templateObject,taggedTemplateLiteral=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"),StyledTitle=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js").ZP.h2(_templateObject||(_templateObject=(0,taggedTemplateLiteral.Z)(["\n    font-size: var(--md-font-size-big);\n    line-height: var(--md-line-height-big);\n    font-family: var(--md-font-family);\n    margin: 0;\n    color: var(--md-color-grey-bright);\n"]))),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),Title=function Title(_ref){var text=_ref.text;return(0,jsx_runtime.jsx)(StyledTitle,{children:text})},components_Title=Title;try{FunctionComponent.displayName="Title",FunctionComponent.__docgenInfo={description:"",displayName:"Title",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Title/index.tsx#Title"]={docgenInfo:Title.__docgenInfo,name:"Title",path:"src/components/Title/index.tsx#Title"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Title/Title.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InputTitle:function(){return InputTitle},__namedExportsOrder:function(){return __namedExportsOrder}});var meta={title:"Components/Title",component:__webpack_require__("./src/components/Title/index.tsx").Z,tags:["autodocs"],args:{text:"Some Title"}};__webpack_exports__.default=meta;var InputTitle={args:{text:"Some Title"}},__namedExportsOrder=["InputTitle"];InputTitle.parameters={...InputTitle.parameters,docs:{...InputTitle.parameters?.docs,source:{originalSource:"{\n  args: {\n    text: 'Some Title'\n  }\n}",...InputTitle.parameters?.docs?.source}}}}}]);